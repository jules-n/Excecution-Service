spring:
#  redis:
#    host: ${REDIS_HOST:127.0.0.1}
#    port: ${REDIS_PORT:6379}
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017}
      database: ${MONGODB_DATABASE:execution-service}
#    redis:
#      timeout: ${REDIS_TIMEOUT:6000}
#      expiration: ${REDIS_EXPIRATION:600}
  cloud:
    stream:
      bindings:
        output:
          destination:
             add: ${TOPIC_ON_ADD:device-pipeline-add}
             drop: ${TOPIC_ON_DROP:device-pipeline-drop}
    gcp:
      project-id: ${PROJECT_ID:single-system}
  kafka:
    producer:
      results-sending-data-topic: ${RESULTS_SENDING_DATA:results-sending-data}
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
server:
  port: ${SERVER_PORT:9098}

grpc:
  server:
    port: ${GRPC_SERVER_PORT:9099}

mongock:
  change-logs-scan-package:
    - com.ynero.ss.execution.migration
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_EXPOSE_ENDPOINTS:*}
  info:
    git:
      enabled: true
  server:
    port: ${ACTUATOR_PORT:8058}
#  health:
#    redis:
#      enabled: false